

Respuestas 
1)free nos proporciona informacion del estado de la memoria en el sistema. nos miestra la cantidad de memoria libre de el espacio
de direccionamiento y ademas nos muestra la capacidad de memoria swap y la memoria total del sistema, ademas mandando este comando 
con determinados argumentos toda esta informacion nos la puede dar en bytes, megabyte, gygabytes, etc...

2)El computador tenía 7930 megas de memoria, de la cual 4530 megas estaban libres. Para nosotros ese espacio 
libre era muy poco debido a que solo se tenía 2 ventanas de chrome abierta y una consola, y comparando linux con
windows es bastante inesperado que con tan pocos programas abiertos el sistema tuviera en uso casi la mitad de su memoria.


4) cuando Ejecutamos el programa se puede evidenciar que la memoria libre disminuye más o menos en la cantidad ingresada en los parámetros,
cuando  el programa termina su ejecución la memoria regresa a su estado anterior antes de la ejecución de memory-user, para valores 
la memoria libre baja drásticamente y se nota ralentización en la computadora, en la construcción de el código una versión al parecer
pedía tanta memoria que bloqueaba el pc y toca reiniciarlo, también se puede notar que el programa toma un poco más de la memoria que 
le ingresamos como parámetro, nosotros deducimos que es por el espacio de el heap y el bloque de código.

5)pmap nos muestra las posiciones de memoria y el espacio que cada uno ocupa dentro de un proceso determinado dado por un PID a 
diferencia de free que nos da valores generales de la memoria usada, libre, swap etc....

7) Al ejecutar el pmap con -x la consola nos mostrara el gasto de memoria, el RSS y el Disty en Kilobytes, con el argumennto -d la 
consolla nos muestra el offset y el device y con el argumento -q los datos se entregaran en bytes y no en kilobytes

8)cuando se cambia la cantidad de memoria reservada en nuestro algoritmo en el pmap se puede evidenciar claramente que la memoria usada es 
directamente proporcioonal al crecimineto de la memoria separada por nuestro memory-user, lo cual es lo esperado debido a que no tendria sentido 
que a mas memoria pedida menos memoria usada.
